#!/bin/python3

import pandas
import sys
import unicodedata
from simplemediawiki import MediaWiki

import logging
from logging import debug, info, warning, error
logging.basicConfig(level=logging.DEBUG, format="%(levelname)s: %(message)s")

import difflib
diff = difflib.Differ()

def clean_old_cards(wiki, cards):
    """
    Delete old card pages.
    """
    r = wiki.call2(action="query", list="categorymembers", cmtitle="Category:People", cmlimit=5000)
    for page in r['query']['categorymembers']:
        if page['title'] not in cards:
            deletetoken = wiki.get_deletetoken(page['title'])
            info("Deleting page '{}'".format(page['title']))
            wiki.call2(action="delete", title=page['title'], token=deletetoken)

def process(wiki, people_file):
    cards = set()
    excel_file = pandas.ExcelFile(people_file)
    sheet = excel_file.parse(excel_file.sheet_names[0])

    columns = {
            'Name:' : 'Name',
            'Project:' : 'Project',
            'EPITA Class:' : 'EPITA Class',
            'Status:' : 'Status',
            'Diploma:' : 'Diploma',
            'Current position:' : 'Current position',
            'Home page:' : 'Home page',
            'Arrival date:' : 'Arrival date',
            'Departure date:' : 'Departure date',
            'Additional information:' : 'Additional information',
            'Photo:' : 'Photo',
            'Phone number:' : 'Phone number'
    }

    for entry in sheet.itertuples():
        card = "{{Card\n"
        page_title = ""

        for i, value in enumerate(entry[1:]):
            if sheet.columns[i] in columns and str(value) not in ('nan', '?', 'NaT'):
                if "date" in sheet.columns[i]:
                    value = value.strftime("%Y-%m-%d")
                if columns[sheet.columns[i]] == 'Name':
                    page_title = 'People/{}'.format(value)
                if columns[sheet.columns[i]] == 'EPITA Class':
                    value = int(value)
                card += "| {} = {}\n".format(columns[sheet.columns[i]], value)
            else:
                debug("Ignore the cell : {}= {}".format(sheet.columns[i], value))
        card += "}}"

        current_page = wiki.get_page(page_title)
        new_page = unicodedata.normalize('NFKD', card)
        current_page = unicodedata.normalize('NFKD', current_page)
        if new_page != current_page:
            info("Update card page {0}".format(page_title))
            debug("Diff:\n" + "".join(list(diff.compare(current_page.splitlines(1), new_page.splitlines(1)))))
            wiki.update_page(title=page_title, content=new_page)
        cards.add(page_title)
        print(card)
    clean_old_cards(wiki, cards)

def main():
    wiki = MediaWiki('https://www.lrde.epita.fr/api.php')
    wiki.login('Bot', 'raiQuaef4hooyu7eoZ6t', 'local')
    info("Connected to %s" % wiki.call2(action='query', meta='siteinfo')['query']['general']['sitename'])

    # pretty_print(wiki.call2(action="query", list="categorymembers", cmtitle="Category:CSIReports", cmlimit=5000))
    for arg in sys.argv[1:]:
        process(wiki, arg)
        sys.exit()

    wiki.logout()

if __name__ == '__main__':
    main()
